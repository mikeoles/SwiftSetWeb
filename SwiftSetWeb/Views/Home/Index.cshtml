@model ExerciseGroupViewModel

@{
    ViewData["Title"] = "Home Page";
}

<link rel="stylesheet" href="~/css/index.css" />
<!-- Scrollbar Custom CSS -->
<link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/malihu-custom-scrollbar-plugin/3.1.5/jquery.mCustomScrollbar.min.css">

<div class="container-fluid">
    <div class="row top-buffer">
        <div class="Selection">
            <div id="Groups">
                @foreach (var item in Model.SortingGroups)
                {
                    string isOriginalStr = item.IsOriginal ? "yes" : "no";
                    <button original="@isOriginalStr" class="btn hidden btn-primary GroupButton @item.Id-group" id="@item.Id"><div class="verticalCenter">@Html.DisplayFor(modelItem => item.Name)</div></button>
                }
            </div>
        </div>
        <div class="Selection">
            @foreach (var item in Model.SortingGroups)
            {
                <div hidden class="CategoryRows @item.Id-categories">
                    @if (@item.IsMultiChoice)
                    {
                    <div data-toggle="buttons-checkbox">
                        @foreach (var category in item.Categories)
                        {
                            <button type="submit" class="btn btn-primary multiChoiceButton mcb-@item.Id" name="@item.Id" value="@category.Name" id="@category.Id">@category.Name</button>
                        }
                        <input class="btn btn-success hidden submitMulti submitMulti-@item.Id" type="submit" value="Submit" name="@item.Id" onclick="AddMultiCategory(this,'@item.Name',@item.Id)" />
                    </div>
                    }
                    else
                    {
                        @foreach (var category in item.Categories)
                        {
                            <button onclick="AddCategory(this,@category.Id,@item.Id,'@item.Name')" class="btn btn-primary AddCategory" id="@category.Name">@Html.DisplayFor(modelItem => category.Name)</button>
                        }
                    }
                </div>
            }
        </div>
    </div>
    <div class="row">
    </div>
    <div class="row">
        <div class="col-sm-3">
            <div id="categoriesContainer">
                <div class="sortingTitle">Applied Sorting</div>
                <ol id="ChosenCategories">
                    <li class="hidden BackToGroups">
                        <div id="currentGroup"></div>
                        <button class="btn btn-danger BackGroupsButton" id="">Back</button>
                    </li>
                </ol>
                <button class="btn btn-danger hidden" id="ClearSortButton">Clear Sorting</button>
            </div>
        </div>
        <div class="col-sm-6">
            <div id="Results">
                <form id="searchForm">
                    <p>
                        <input class="form-control" id="searchBox" type="text" name="SearchString">
                    </p>
                </form>
                <div id="SearchResults">
                    @Html.Partial("_PartialGrid.cshtml", Model.Exercises.ToList())
                </div>
            </div>
        </div>
        <div class="col-sm-3"></div>
    </div>
</div>

@section Scripts {

    <script type="text/javascript">
        var groupId = '';

        $(document).ready(function () {

            $('.GroupButton').each(function () {
                if ($(this).attr('original') == 'yes') {
                    $(this).removeClass('hidden');
                }
            });

            //When a group button is clicked, hide the other groups and show the category options for that group
            $(".GroupButton").on("click", function () {
                $("#Groups").hide();
                $(".BackToGroups").removeClass('hidden');
                $("#currentGroup").text($(this).text());
                groupId = this.id;
                $("." + this.id + "-categories").show();
            });

            $('.BackGroupsButton').on('click', function () {
                $(".BackToGroups").addClass('hidden');
                $("#Groups").show();
                $("." + groupId + "-categories").hide();
            });

            $('.multiChoiceButton').on('click', function () {
                $(".submitMulti-" + this.name).removeClass('hidden');
            });

            $("#ClearSortButton").on("click", function () {
                $(".BackToGroups").addClass('hidden');
                $('#ChosenCategories li:not(:first)').remove();
                $('#ClearSortButton').addClass('hidden');
                $(".GroupButton").addClass('hidden');
                $(".GroupButton[original='yes']").removeClass('hidden');
                var path = '@Url.Action("ClearSort","Exercises")';
                $.ajax({
                    type: "GET",
                    url: path,
                })
                .done(function (response) {
                    $("#SearchResults").html(response);
                });
                $('.cbk').each(function () {//uncheck all checkboxes
                    this.checked = false;
                });
            });
        });

        function AddCategory(e, id, hideButton, groupName) {

            $("#Groups").show();
            $('#ClearSortButton').removeClass('hidden');
            $("#ChosenCategories").append('<li>' + groupName + ': ' + e.id + '</li>');

            $('.' + hideButton + '-group').addClass('hidden');
            $(".BackToGroups").addClass('hidden');
            $("." + groupId + "-categories").hide();

            var path = '@Url.Action("AddSort","Exercises")';
            $.ajax({
                type: "GET",
                url: path,
                data: { categoryId: id },
            })
            .done(function (response) {
                $("#SearchResults").html(response);
                var path = '@Url.Action("NewOptions","Exercises")';
                $.ajax({
                    type: "GET",
                    url: path
                })
                .done(function (response) {
                    for (i in response) {
                        $("." + response[i] + "-group").removeClass('hidden');
                    }
                });
            });
        }

        function AddMultiCategory(cat, groupName, hideButton) {

            var ids = "";
            var allCategories = ""
            $(".mcb-" + cat.name).each(function (i, obj) {
                if ($(this).hasClass('active')) {
                    ids += $(this).attr("id") + ",";
                    allCategories += $(this).attr("value").trim() + "/ "
                    $(this).removeClass('active');
                }
            });

            if (ids == "") {
                alert("Please choose at least one option");
                return;
            }

            $("#Groups").show();
            $('#ClearSortButton').removeClass('hidden');
            $("#ChosenCategories").append('<li>' + groupName + ': ' + allCategories.slice(0, -2) + '</li>');

            $('.' + hideButton + '-group').addClass('hidden');
            $(".BackToGroups").addClass('hidden');
            $("." + groupId + "-categories").hide();
            $(".submitMulti").addClass('hidden');

            var path = '@Url.Action("AddMultiSort","Exercises")';
            $.ajax({
                type: "GET",
                url: path,
                data: { categoryIds: ids },
            })
            .done(function (response) {
                $("#SearchResults").html(response);
            });
        }

        function runSearch() {
            var path = '@Url.Action("Index","Exercises")';

            $.ajax({
                type: "GET",
                url: path,
                data: { searchString: $("#searchBox").val() },
            })
            .done(function (response) {
                $("#SearchResults").html(response);
            });
        }

        $(document).on('keyup', '#searchBox', function (e) {
            var delay = (function () {
                var timer = 0;
                return function (callback, ms) {
                    clearTimeout(timer);
                    timer = setTimeout(callback, ms);
                };
            })();

            delay(function () { runSearch() }, 1000);
        });

    </script>
}
