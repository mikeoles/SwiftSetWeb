@model IEnumerable<SwiftSetWeb.Models.SortingGroup>

@{
    ViewData["Title"] = "Home Page";
}

<link rel="stylesheet" href="~/css/index.css" />
<!-- Scrollbar Custom CSS -->
<link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/malihu-custom-scrollbar-plugin/3.1.5/jquery.mCustomScrollbar.min.css">

<button class="btn btn-info" id="ExercisesButton" type="button" onclick="location.href='@Url.Action("Index", "Exercises")'">Exercises (@ViewBag.NumExercises)</button>
<button class="btn btn-info" id="ClearSortButton">Clear Sorting</button>
<ul id="ChosenCategories" class="list-inline"></ul>
<table class="table">
    <tbody>
        @foreach (var item in Model)
        {
            bool isOriginal = !item.IsOriginal;
            string isOriginalStr = item.IsOriginal ? "yes" : "no";
            <tr hidden="@isOriginal" id="@item.Id-group" class="GroupRows" original="@isOriginalStr">
                <td>
                    <button class="btn btn-info GroupButton" id="@item.Id">@Html.DisplayFor(modelItem => item.Name)</button>
                </td>
            </tr>
            <tr class="CategoryRows" hidden id="@item.Id-categories">
                <td>
                    <button class="btn btn-info BackToGroupButton" id="@item.Id">@Html.DisplayFor(modelItem => item.Name)</button>
                    @if (@item.IsMultiChoice)
                    {
                        <div class="btn-group" data-toggle="buttons-checkbox">
                            @foreach (var category in item.Categories)
                            {
                                <button type="submit" class="btn btn-primary multiChoiceButton" name="@category.Name" value="@category.Name" id="@category.Id">@category.Name</button>
                            }
                        </div>
                        <input class="btn btn-default" type="submit" value="Submit" onclick="AddMultiCategory()" />
                    }
                    else
                    {
                        @foreach (var category in item.Categories)
                        {
                            <button onclick="AddCategory(this,@category.Id)" class="btn btn-info AddCategory" id="@category.Name">@Html.DisplayFor(modelItem => category.Name)</button>
                        }

                    }
                </td>
            </tr>
        }
    </tbody>
</table>

@section Scripts {

    <script type="text/javascript">
        $(document).ready(function () {
            $(".GroupButton").on("click", function () {
                $("#" + this.id + "-categories").toggle();
                $("#" + this.id + "-group").toggle();
             });

            $("#ClearSortButton").on("click", function () {
                $("#ChosenCategories").empty();
                $(".GroupRows").hide();
                $(".CategoryRows").hide();
                $(".GroupRows[original='yes']").show();
                var path = '@Url.Action("ClearSort","Exercises")';
                $.ajax({
                    type: "DELETE",
                    url: path,
                });
                $("#ExercisesButton").text('Exercises (' +@ViewBag.NumExercises+')');
                $('.cbk').each(function () {//uncheck all checkboxes
                    this.checked = false; 
                });
            });

            $(".BackToGroupButton").on("click", function () {
                $("#" + this.id + "-categories").toggle();
                $("#" + this.id + "-group").toggle();
            });
        });

        function AddCategory(e,id) {
            $(e).closest('tr').hide();
            var path = '@Url.Action("AddSort","Exercises")';
            $("#ChosenCategories").append('<li class="list-inline-item list-group-item-info">' + e.id + '</li>');
            $.ajax({
                type: "GET",
                url: path,
                data: { categoryId: id },
                success: function (response) {
                    $("#ExercisesButton").text('Exercises (' + response.count + ')');
                    for(i in response.newOptions){
                        $("#" + response.newOptions[i] + "-group").show();
                    }
                },
            });
        }    

        function AddMultiCategory() {
            $(".CategoryRows").hide();
            var ids = "";
            $(".multiChoiceButton").each(function (i, obj) {
                if ($(this).hasClass('active')) {
                    ids += $(this).attr("id") + ",";
                    $("#ChosenCategories").append('<li class="list-inline-item list-group-item-info">' + $(this).attr("name") + '</li>');
                }
            });
            var path = '@Url.Action("AddMultiSort","Exercises")';
            $.ajax({
                type: "GET",
                url: path,
                data: { categoryIds: ids },
                dataType: "json",
                contentType: 'application/json; charset=utf-8',
                success: function (response) {
                    $("#ExercisesButton").text('Exercises (' + response.count + ')');
                }
            });
        }
    </script>
}