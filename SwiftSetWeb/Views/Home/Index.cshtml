@model ExerciseGroupViewModel

@{
    ViewData["Title"] = "Home Page";
}

<link rel="stylesheet" href="~/css/index.css" />
<!-- Scrollbar Custom CSS -->
<link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/malihu-custom-scrollbar-plugin/3.1.5/jquery.mCustomScrollbar.min.css">

<div class="container-fluid">
    <div class="row">
        <div id="Selection">
            <div id="categoriesContainer">
                <ul id="ChosenCategories" class="list-inline"></ul>
            </div>
            <div class="ControlButtons">
                <button class="btn btn-primary hidden" id="ClearSortButton">Clear Sorting</button>
            </div>
            <div id="Groups">
                <table id="mainTable" class="table">
                    <tbody>
                        @foreach (var item in Model.SortingGroups)
                        {
                            bool isOriginal = !item.IsOriginal;
                            string isOriginalStr = item.IsOriginal ? "yes" : "no";
                            <tr>
                                <td hidden="@isOriginal" class="GroupRows @item.Id-group" original="@isOriginalStr">
                                    <button class="btn btn-info GroupButton" id="@item.Id">@Html.DisplayFor(modelItem => item.Name)</button>
                                </td>
                            </tr>
                        }
                    </tbody>
                </table>
            </div>

            <div id="Categories">
                @foreach (var item in Model.SortingGroups)
                {
                    <div hidden class="CategoryRows @item.Id-categories">
                        @if (@item.IsMultiChoice)
                        {
                            <div class="btn-group" data-toggle="buttons-checkbox">
                                <ul class="categoriesList">
                                    @foreach (var category in item.Categories)
                                    {
                                        <li>
                                            <button type="submit" class="btn btn-primary multiChoiceButton mcb-@item.Id" name="@item.Id" value="@category.Name" id="@category.Id">@category.Name</button>
                                        </li>
                                    }
                                </ul>
                            </div>
                            <input class="btn btn-success hidden submitMulti submitMulti-@item.Id" type="submit" value="Submit" name="@item.Id" onclick="AddMultiCategory(this,'@item.Name')" />
                        }
                        else
                        {
                            <div class="btn-group" data-toggle="buttons-checkbox">
                                <ul class="categoriesList">
                                    @foreach (var category in item.Categories)
                                    {
                                        <li>
                                            <button onclick="AddCategory(this,@category.Id,@item.Id,'@item.Name')" class="btn btn-primary AddCategory" id="@category.Name">@Html.DisplayFor(modelItem => category.Name)</button>
                                        </li>
                                    }
                                </ul>
                            </div>
                        }
                    </div>
                }
            </div>
        </div>
        <div id="Results">
            <form id="searchForm">
                <p>
                    <input id="searchBox" type="text" name="SearchString">
                </p>
            </form>
            <div id="SearchResults">
                @Html.Partial("_PartialGrid.cshtml", Model.Exercises.ToList());
            </div>
        </div>
    </div>
</div>

@section Scripts {

    <script type="text/javascript">
        $(document).ready(function () {


            $('.multiChoiceButton').on('click', function () {
                $(".submitMulti-" + this.name).removeClass('hidden');
                $("#AddCategory").hide();
            });

            $(".GroupButton").on("click", function () {
                $(".CategoryRows").hide();
                $("." + this.id + "-categories").toggle();
                });

            $("#ClearSortButton").on("click", function () {
                $("#ChosenCategories").empty();
                $(".GroupRows").closest('tr').hide();
                $(".CategoryRows").hide();
                $('#ClearSortButton').addClass('hidden');
                $(".GroupRows[original='yes']").closest('tr').show();
                var path = '@Url.Action("ClearSort","Exercises")';
                $.ajax({
                    type: "DELETE",
                    url: path,
                });
                $('.cbk').each(function () {//uncheck all checkboxes
                    this.checked = false;
                });
            });
        });

        $(document).on('keyup', '#searchBox', function (e) {  
            var delay = (function () {
                var timer = 0;
                return function (callback, ms) {
                    clearTimeout(timer);
                    timer = setTimeout(callback, ms);
                };
            })();

            delay(function () {
                var path = '@Url.Action("Index","Exercises")';
                
                    $.ajax({
                        type: "GET",
                        url: path,
                        data: { searchString: $("#searchBox").val() },
                    })
                    .done(function (response) {
                        $("#SearchResults").html(response);
                    });
            }, 1000);
        });

        function AddCategory(e, id, hideButton, groupName) {
            $("." + hideButton + "-categories").toggle();
            $('.' + hideButton + '-group').closest('tr').hide();
            var path = '@Url.Action("AddSort","Exercises")';
            $("#ChosenCategories").append('<li class="list-inline-item list-group-item-info">' + groupName + '<br/>' + e.id + '</li>');
            $('#ClearSortButton').removeClass('hidden');
            $.ajax({
                type: "GET",
                url: path,
                data: { categoryId: id },
            })
                .done(function (response) {
                //TODO
                //for (i in response.newOptions) {
                //    $("." + response.newOptions[i] + "-group").show();
                //}
                $("#SearchResults").html(response);
            })
            .fail(function (jqXHR, textStatus) {
                alert("fail");
            });    
        }

        function AddMultiCategory(cat,groupName) {
            var ids = "";
            var allCategories = ""
            $(".mcb-" + cat.name).each(function (i, obj) {
                if ($(this).hasClass('active')) {
                    ids += $(this).attr("id") + ",";
                    allCategories += $(this).attr("value").trim() + "/"
                    $(this).removeClass('active');
                }
            });

            if (ids == "") {
                alert("Please choose at least one option");
                return;
            }

            $("#ChosenCategories").append('<li class="list-inline-item list-group-item-info">' + groupName + '<br/>' + allCategories.slice(0, -1) + '</li>');
            $(".CategoryRows").hide();
            $('#ClearSortButton').removeClass('hidden');
            var path = '@Url.Action("AddMultiSort","Exercises")';
            $.ajax({
                type: "GET",
                url: path,
                data: { categoryIds: ids },
            })
            .done(function (response) {
                $(".submitMulti").addClass('hidden');
                $("#SearchResults").html(response);
            });
        }
    </script>
}
